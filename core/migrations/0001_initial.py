# Generated by Django 5.2.6 on 2025-09-11 14:28

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rides', '0003_alter_cancellationrecord_user_tier_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GPSDataRetentionSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('retention_days', models.PositiveIntegerField()),
                ('action', models.CharField(choices=[('archive', 'Archive'), ('delete', 'Delete'), ('anonymize', 'Anonymize'), ('encrypt_further', 'Additional Encryption')], max_length=20)),
                ('user_tier', models.CharField(blank=True, max_length=20)),
                ('applies_to_all', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('records_processed', models.PositiveIntegerField(default=0)),
                ('records_failed', models.PositiveIntegerField(default=0)),
                ('config', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'gps_data_retention_schedules',
                'indexes': [models.Index(fields=['is_active', 'next_run'], name='gps_data_re_is_acti_1008af_idx'), models.Index(fields=['user_tier'], name='gps_data_re_user_ti_0b8740_idx'), models.Index(fields=['last_run'], name='gps_data_re_last_ru_0ae5d2_idx')],
            },
        ),
        migrations.CreateModel(
            name='GPSEncryptionSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(db_index=True, max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('last_used', models.DateTimeField(auto_now=True)),
                ('encryption_count', models.PositiveIntegerField(default=0)),
                ('decryption_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('key_exchange_completed', models.BooleanField(default=False)),
                ('client_public_key_hash', models.CharField(blank=True, max_length=64)),
                ('server_public_key_hash', models.CharField(blank=True, max_length=64)),
                ('ride', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='encryption_session', to='rides.ride')),
            ],
            options={
                'db_table': 'gps_encryption_sessions',
            },
        ),
        migrations.CreateModel(
            name='GPSEncryptionAudit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('session_created', 'Session Created'), ('session_ended', 'Session Ended'), ('session_expired', 'Session Expired'), ('encryption_success', 'Encryption Success'), ('encryption_failed', 'Encryption Failed'), ('decryption_success', 'Decryption Success'), ('decryption_failed', 'Decryption Failed'), ('key_exchange', 'Key Exchange'), ('unauthorized_access', 'Unauthorized Access'), ('system_error', 'System Error')], max_length=30)),
                ('severity', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], max_length=10)),
                ('message', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_id', models.CharField(blank=True, max_length=64)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gps_audit_logs', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to='core.gpsencryptionsession')),
            ],
            options={
                'db_table': 'gps_encryption_audit',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EncryptedGPSData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('encrypted_data', models.TextField()),
                ('nonce', models.CharField(max_length=32)),
                ('timestamp', models.DateTimeField()),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('source_device', models.CharField(default='mobile_app', max_length=50)),
                ('encrypted_speed', models.TextField(blank=True)),
                ('encrypted_bearing', models.TextField(blank=True)),
                ('encrypted_altitude', models.TextField(blank=True)),
                ('encrypted_accuracy', models.TextField(blank=True)),
                ('encryption_version', models.CharField(default='1.0', max_length=10)),
                ('checksum', models.CharField(blank=True, max_length=64)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='encrypted_gps_data', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gps_data', to='core.gpsencryptionsession')),
            ],
            options={
                'db_table': 'encrypted_gps_data',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='GPSSecurityPolicy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('policy_type', models.CharField(choices=[('encryption_required', 'Encryption Required'), ('decryption_allowed', 'Decryption Allowed'), ('data_retention', 'Data Retention'), ('access_control', 'Access Control'), ('audit_logging', 'Audit Logging')], max_length=30)),
                ('description', models.TextField()),
                ('user_tier', models.CharField(choices=[('normal', 'Normal'), ('premium', 'Premium'), ('vip', 'VIP'), ('concierge', 'Concierge'), ('admin', 'Admin')], max_length=20)),
                ('applies_to_all', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('enforcement_level', models.CharField(choices=[('advisory', 'Advisory'), ('warning', 'Warning'), ('enforced', 'Enforced'), ('strict', 'Strict')], default='enforced', max_length=20)),
                ('config', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_gps_policies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'gps_security_policies',
            },
        ),
        migrations.CreateModel(
            name='GPSDecryptionLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('unauthorized', 'Unauthorized'), ('session_expired', 'Session Expired'), ('invalid_data', 'Invalid Data')], max_length=20)),
                ('request_reason', models.CharField(blank=True, max_length=100)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('decryption_time_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('gps_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='decryption_logs', to='core.encryptedgpsdata')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gps_decryption_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'gps_decryption_logs',
                'indexes': [models.Index(fields=['gps_data', 'requested_at'], name='gps_decrypt_gps_dat_46708f_idx'), models.Index(fields=['requested_by', 'status'], name='gps_decrypt_request_d3465a_idx'), models.Index(fields=['requested_at'], name='gps_decrypt_request_233e7e_idx'), models.Index(fields=['status'], name='gps_decrypt_status_7da3fb_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='gpsencryptionsession',
            index=models.Index(fields=['session_id'], name='gps_encrypt_session_e7f8cb_idx'),
        ),
        migrations.AddIndex(
            model_name='gpsencryptionsession',
            index=models.Index(fields=['ride', 'is_active'], name='gps_encrypt_ride_id_b759a0_idx'),
        ),
        migrations.AddIndex(
            model_name='gpsencryptionsession',
            index=models.Index(fields=['created_at'], name='gps_encrypt_created_a14825_idx'),
        ),
        migrations.AddIndex(
            model_name='gpsencryptionsession',
            index=models.Index(fields=['expires_at'], name='gps_encrypt_expires_13b187_idx'),
        ),
        migrations.AddIndex(
            model_name='gpsencryptionaudit',
            index=models.Index(fields=['event_type', 'severity'], name='gps_encrypt_event_t_b2e04f_idx'),
        ),
        migrations.AddIndex(
            model_name='gpsencryptionaudit',
            index=models.Index(fields=['session', 'created_at'], name='gps_encrypt_session_1e140c_idx'),
        ),
        migrations.AddIndex(
            model_name='gpsencryptionaudit',
            index=models.Index(fields=['user', 'created_at'], name='gps_encrypt_user_id_749b11_idx'),
        ),
        migrations.AddIndex(
            model_name='gpsencryptionaudit',
            index=models.Index(fields=['created_at'], name='gps_encrypt_created_ec87b0_idx'),
        ),
        migrations.AddIndex(
            model_name='gpsencryptionaudit',
            index=models.Index(fields=['severity'], name='gps_encrypt_severit_8f82e1_idx'),
        ),
        migrations.AddIndex(
            model_name='encryptedgpsdata',
            index=models.Index(fields=['session', 'timestamp'], name='encrypted_g_session_b0acb0_idx'),
        ),
        migrations.AddIndex(
            model_name='encryptedgpsdata',
            index=models.Index(fields=['user', 'recorded_at'], name='encrypted_g_user_id_674a6d_idx'),
        ),
        migrations.AddIndex(
            model_name='encryptedgpsdata',
            index=models.Index(fields=['timestamp'], name='encrypted_g_timesta_03c8b9_idx'),
        ),
        migrations.AddIndex(
            model_name='encryptedgpsdata',
            index=models.Index(fields=['recorded_at'], name='encrypted_g_recorde_3c765b_idx'),
        ),
        migrations.AddIndex(
            model_name='gpssecuritypolicy',
            index=models.Index(fields=['policy_type', 'user_tier'], name='gps_securit_policy__2dba20_idx'),
        ),
        migrations.AddIndex(
            model_name='gpssecuritypolicy',
            index=models.Index(fields=['is_active'], name='gps_securit_is_acti_e244d1_idx'),
        ),
        migrations.AddIndex(
            model_name='gpssecuritypolicy',
            index=models.Index(fields=['created_at'], name='gps_securit_created_6b5e02_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='gpssecuritypolicy',
            unique_together={('policy_type', 'user_tier')},
        ),
    ]
