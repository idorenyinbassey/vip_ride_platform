events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    upstream django {
        server web:8000;
    }

    server {
        listen 80;
        server_name localhost;

        # Redirect HTTP to HTTPS in production
        # return 301 https://$host$request_uri;

        location = /favicon.ico { 
            access_log off; 
            log_not_found off; 
        }

        # Static files
        location /static/ {
            alias /var/www/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Media files
        location /media/ {
            alias /var/www/media/;
            expires 7d;
            add_header Cache-Control "public";
        }

        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            include proxy_params;
            proxy_pass http://django;
        }

        # Login endpoint with stricter rate limiting
        location /api/v1/accounts/login/ {
            limit_req zone=login burst=5 nodelay;
            include proxy_params;
            proxy_pass http://django;
        }

        # Admin interface
        location /admin/ {
            include proxy_params;
            proxy_pass http://django;
        }

        # Main application
        location / {
            include proxy_params;
            proxy_pass http://django;
        }
    }

    # HTTPS configuration (uncomment for production with SSL)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #
    #     # HSTS (optional)
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #
    #     location = /favicon.ico { 
    #         access_log off; 
    #         log_not_found off; 
    #     }
    #
    #     location /static/ {
    #         alias /var/www/static/;
    #         expires 30d;
    #         add_header Cache-Control "public, immutable";
    #     }
    #
    #     location /media/ {
    #         alias /var/www/media/;
    #         expires 7d;
    #         add_header Cache-Control "public";
    #     }
    #
    #     location /api/ {
    #         limit_req zone=api burst=20 nodelay;
    #         include proxy_params;
    #         proxy_pass http://django;
    #     }
    #
    #     location /api/v1/accounts/login/ {
    #         limit_req zone=login burst=5 nodelay;
    #         include proxy_params;
    #         proxy_pass http://django;
    #     }
    #
    #     location /admin/ {
    #         include proxy_params;
    #         proxy_pass http://django;
    #     }
    #
    #     location / {
    #         include proxy_params;
    #         proxy_pass http://django;
    #     }
    # }
}
