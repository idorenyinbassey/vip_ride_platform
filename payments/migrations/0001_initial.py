# Generated by Django 5.2.5 on 2025-08-06 13:57

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hotels', '0001_initial'),
        ('rides', '0001_initial'),
        ('vehicle_leasing', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_currency', models.CharField(choices=[('NGN', 'Nigerian Naira'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('ZAR', 'South African Rand'), ('GHS', 'Ghanaian Cedi'), ('KES', 'Kenyan Shilling')], default='NGN', max_length=3)),
                ('target_currency', models.CharField(choices=[('NGN', 'Nigerian Naira'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('ZAR', 'South African Rand'), ('GHS', 'Ghanaian Cedi'), ('KES', 'Kenyan Shilling')], max_length=3)),
                ('rate', models.DecimalField(decimal_places=6, help_text='Rate to convert 1 unit of base currency to target currency', max_digits=10)),
                ('source', models.CharField(default='manual', help_text='Source of exchange rate (manual, api, bank)', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'exchange_rates',
                'indexes': [models.Index(fields=['base_currency', 'target_currency'], name='exchange_ra_base_cu_46dc7f_idx'), models.Index(fields=['is_active', 'updated_at'], name='exchange_ra_is_acti_b7a226_idx')],
                'unique_together': {('base_currency', 'target_currency')},
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_type', models.CharField(choices=[('ride_payment', 'Ride Payment'), ('hotel_booking', 'Hotel Booking Payment'), ('driver_subscription', 'Driver Subscription'), ('commission_payout', 'Commission Payout'), ('refund', 'Refund Payment'), ('cancellation_fee', 'Cancellation Fee'), ('lease_payment', 'Vehicle Lease Payment'), ('penalty', 'Penalty Payment')], default='ride_payment', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount in original currency', max_digits=12)),
                ('currency', models.CharField(choices=[('NGN', 'Nigerian Naira'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('ZAR', 'South African Rand'), ('GHS', 'Ghanaian Cedi'), ('KES', 'Kenyan Shilling')], default='NGN', max_length=3)),
                ('base_amount', models.DecimalField(decimal_places=2, help_text='Amount converted to base currency (NGN)', max_digits=12)),
                ('exchange_rate_used', models.DecimalField(blank=True, decimal_places=6, help_text='Exchange rate used for conversion', max_digits=10, null=True)),
                ('payment_method', models.CharField(choices=[('card', 'Credit/Debit Card'), ('mobile_money', 'Mobile Money'), ('bank_transfer', 'Bank Transfer'), ('wallet', 'Digital Wallet'), ('cash', 'Cash Payment'), ('corporate_account', 'Corporate Account')], default='card', max_length=20)),
                ('payment_gateway', models.CharField(blank=True, help_text='Payment processor used (e.g., Paystack, Flutterwave)', max_length=50)),
                ('gateway_transaction_id', models.CharField(blank=True, help_text='Transaction ID from payment gateway', max_length=100)),
                ('gateway_reference', models.CharField(blank=True, help_text='Gateway reference number', max_length=100)),
                ('gateway_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('platform_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, help_text='Amount after all fees', max_digits=12)),
                ('driver_commission', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('fleet_commission', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('platform_commission', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('vehicle_owner_share', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('failure_reason', models.TextField(blank=True)),
                ('failure_code', models.CharField(blank=True, max_length=50)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('refund_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('refund_reason', models.TextField(blank=True)),
                ('refunded_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional payment metadata')),
                ('personal_data_processed', models.BooleanField(default=False, help_text='Whether personal data was processed for this payment')),
                ('data_processing_purpose', models.CharField(blank=True, help_text='Purpose of personal data processing', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hotel_booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booking_payments', to='hotels.hotelbooking')),
                ('payee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments_received', to=settings.AUTH_USER_MODEL)),
                ('payer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments_made', to=settings.AUTH_USER_MODEL)),
                ('ride', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ride_payments', to='rides.ride')),
                ('vehicle_lease', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lease_payments', to='vehicle_leasing.vehiclelease')),
            ],
            options={
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='DriverSubscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tier', models.CharField(choices=[('basic', 'Basic Driver ($99/month)'), ('standard', 'Standard Driver ($149/month)'), ('premium', 'Premium Driver ($199/month)'), ('vip', 'VIP Driver ($299/month)')], default='basic', max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('cancelled', 'Cancelled'), ('suspended', 'Suspended'), ('expired', 'Expired'), ('pending', 'Pending Activation')], default='pending', max_length=10)),
                ('monthly_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(choices=[('NGN', 'Nigerian Naira'), ('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('ZAR', 'South African Rand'), ('GHS', 'Ghanaian Cedi'), ('KES', 'Kenyan Shilling')], default='NGN', max_length=3)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('next_billing_date', models.DateTimeField()),
                ('payment_method', models.CharField(choices=[('card', 'Credit/Debit Card'), ('mobile_money', 'Mobile Money'), ('bank_transfer', 'Bank Transfer'), ('wallet', 'Digital Wallet'), ('cash', 'Cash Payment'), ('corporate_account', 'Corporate Account')], default='card', max_length=20)),
                ('monthly_ride_limit', models.PositiveIntegerField(default=100, help_text='Maximum rides per month for this tier')),
                ('current_month_rides', models.PositiveIntegerField(default=0)),
                ('priority_level', models.PositiveIntegerField(default=1, help_text='1=Lowest, 5=Highest priority for ride allocation')),
                ('can_accept_premium_rides', models.BooleanField(default=False)),
                ('can_accept_vip_rides', models.BooleanField(default=False)),
                ('has_priority_support', models.BooleanField(default=False)),
                ('can_set_custom_rates', models.BooleanField(default=False)),
                ('total_payments_made', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('consecutive_payment_months', models.PositiveIntegerField(default=0)),
                ('missed_payments', models.PositiveIntegerField(default=0)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('auto_renewal_enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='driver_subscription', to=settings.AUTH_USER_MODEL)),
                ('last_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscription_payments', to='payments.payment')),
            ],
            options={
                'db_table': 'driver_subscriptions',
            },
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payer'], name='payments_payer_i_23fca4_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payee'], name='payments_payee_i_31382f_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['ride'], name='payments_ride_id_38c783_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['hotel_booking'], name='payments_hotel_b_be4705_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['vehicle_lease'], name='payments_vehicle_6fbc82_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_type'], name='payments_payment_ba7b87_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status'], name='payments_status_d621e5_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['currency'], name='payments_currenc_a435e6_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_method'], name='payments_payment_ee488d_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['gateway_transaction_id'], name='payments_gateway_f512b1_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['initiated_at'], name='payments_initiat_b8f76d_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['completed_at'], name='payments_complet_185911_idx'),
        ),
        migrations.AddIndex(
            model_name='driversubscription',
            index=models.Index(fields=['driver'], name='driver_subs_driver__502f3f_idx'),
        ),
        migrations.AddIndex(
            model_name='driversubscription',
            index=models.Index(fields=['tier'], name='driver_subs_tier_a68008_idx'),
        ),
        migrations.AddIndex(
            model_name='driversubscription',
            index=models.Index(fields=['status'], name='driver_subs_status_44824f_idx'),
        ),
        migrations.AddIndex(
            model_name='driversubscription',
            index=models.Index(fields=['next_billing_date'], name='driver_subs_next_bi_b0427b_idx'),
        ),
        migrations.AddIndex(
            model_name='driversubscription',
            index=models.Index(fields=['end_date'], name='driver_subs_end_dat_4359d8_idx'),
        ),
    ]
