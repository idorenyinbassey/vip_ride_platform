# Generated by Django 5.2.5 on 2025-08-11 23:50

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SOSConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_tier', models.CharField(choices=[('normal', 'Normal'), ('premium', 'Premium'), ('vip', 'VIP')], max_length=20, unique=True)),
                ('auto_response_enabled', models.BooleanField(default=True)),
                ('max_response_time_seconds', models.PositiveIntegerField(default=300)),
                ('escalation_time_seconds', models.PositiveIntegerField(default=600)),
                ('auto_contact_police', models.BooleanField(default=False)),
                ('auto_contact_medical', models.BooleanField(default=False)),
                ('requires_supervisor_approval', models.BooleanField(default=False)),
                ('real_time_monitoring', models.BooleanField(default=False)),
                ('gps_tracking_frequency_seconds', models.PositiveIntegerField(default=60)),
                ('route_deviation_alert', models.BooleanField(default=False)),
                ('notify_emergency_contacts', models.BooleanField(default=True)),
                ('max_emergency_contacts', models.PositiveIntegerField(default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'sos_configurations',
            },
        ),
        migrations.CreateModel(
            name='ControlOperator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('operator_id', models.CharField(max_length=20, unique=True)),
                ('security_clearance_level', models.CharField(choices=[('basic', 'Basic'), ('enhanced', 'Enhanced'), ('vip', 'VIP'), ('supervisor', 'Supervisor')], default='basic', max_length=20)),
                ('can_handle_emergencies', models.BooleanField(default=True)),
                ('can_contact_authorities', models.BooleanField(default=False)),
                ('can_escalate_incidents', models.BooleanField(default=True)),
                ('can_monitor_vip', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_on_duty', models.BooleanField(default=False)),
                ('current_shift_start', models.DateTimeField(blank=True, null=True)),
                ('total_incidents_handled', models.PositiveIntegerField(default=0)),
                ('average_response_time_seconds', models.PositiveIntegerField(default=0)),
                ('successful_resolutions', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_operators', to='control_center.controloperator')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='control_operator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'control_operators',
            },
        ),
        migrations.CreateModel(
            name='EmergencyIncident',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('incident_type', models.CharField(choices=[('sos', 'SOS Emergency'), ('panic', 'Panic Button'), ('accident', 'Accident'), ('breakdown', 'Vehicle Breakdown'), ('security', 'Security Threat'), ('medical', 'Medical Emergency'), ('route_deviation', 'Route Deviation'), ('suspicious', 'Suspicious Activity')], default='sos', max_length=20)),
                ('priority', models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], default='high', max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('responded', 'Responded'), ('resolved', 'Resolved'), ('false_alarm', 'False Alarm'), ('escalated', 'Escalated')], default='active', max_length=15)),
                ('ride_id', models.UUIDField(blank=True, null=True)),
                ('vehicle_id', models.UUIDField(blank=True, null=True)),
                ('incident_latitude', models.DecimalField(decimal_places=7, help_text='Latitude of incident location', max_digits=10)),
                ('incident_longitude', models.DecimalField(decimal_places=7, help_text='Longitude of incident location', max_digits=10)),
                ('address', models.TextField(blank=True)),
                ('landmark', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField()),
                ('automated_trigger', models.BooleanField(default=False)),
                ('user_triggered', models.BooleanField(default=True)),
                ('response_team_type', models.CharField(blank=True, choices=[('security', 'Security Team'), ('medical', 'Medical Team'), ('police', 'Police'), ('fire', 'Fire Department'), ('technical', 'Technical Support')], max_length=15)),
                ('response_team_contacted', models.BooleanField(default=False)),
                ('response_time_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('emergency_contacts_notified', models.BooleanField(default=False)),
                ('police_notified', models.BooleanField(default=False)),
                ('medical_services_notified', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('first_response_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_incidents', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='driver_incidents', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_incidents', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_incidents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'emergency_incidents',
                'ordering': ['-created_at', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='IncidentResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('initial_contact', 'Initial Contact'), ('status_update', 'Status Update'), ('authority_contact', 'Authority Contacted'), ('team_dispatch', 'Team Dispatched'), ('escalation', 'Escalated'), ('resolution', 'Resolved'), ('follow_up', 'Follow-up')], max_length=30)),
                ('description', models.TextField()),
                ('authority_contacted', models.CharField(blank=True, help_text='Police, Medical, Fire, etc.', max_length=50)),
                ('authority_reference', models.CharField(blank=True, help_text='Reference number from authority', max_length=100)),
                ('team_dispatched', models.CharField(blank=True, max_length=100)),
                ('estimated_arrival_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='control_center.emergencyincident')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incident_responses', to='control_center.controloperator')),
            ],
            options={
                'db_table': 'incident_responses',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='VIPMonitoringSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ride_id', models.UUIDField()),
                ('vehicle_id', models.UUIDField()),
                ('monitoring_level', models.CharField(choices=[('basic', 'Basic Monitoring'), ('enhanced', 'Enhanced Monitoring'), ('premium', 'Premium Monitoring'), ('vip', 'VIP Monitoring')], default='basic', max_length=20)),
                ('planned_route', models.JSONField(default=dict)),
                ('current_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('current_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('last_location_update', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('route_deviation_alert', models.BooleanField(default=False)),
                ('speed_alert', models.BooleanField(default=False)),
                ('duration_alert', models.BooleanField(default=False)),
                ('session_start', models.DateTimeField(auto_now_add=True)),
                ('session_end', models.DateTimeField(blank=True, null=True)),
                ('estimated_arrival', models.DateTimeField(blank=True, null=True)),
                ('panic_button_enabled', models.BooleanField(default=True)),
                ('auto_check_in_enabled', models.BooleanField(default=True)),
                ('check_in_interval_minutes', models.PositiveIntegerField(default=15)),
                ('last_check_in', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='monitoring_assignments', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vip_monitoring_sessions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'vip_monitoring_sessions',
            },
        ),
        migrations.AddIndex(
            model_name='controloperator',
            index=models.Index(fields=['operator_id'], name='control_ope_operato_d09bab_idx'),
        ),
        migrations.AddIndex(
            model_name='controloperator',
            index=models.Index(fields=['security_clearance_level'], name='control_ope_securit_b8744e_idx'),
        ),
        migrations.AddIndex(
            model_name='controloperator',
            index=models.Index(fields=['is_active', 'is_on_duty'], name='control_ope_is_acti_8ed2e8_idx'),
        ),
        migrations.AddIndex(
            model_name='emergencyincident',
            index=models.Index(fields=['incident_type', 'priority'], name='emergency_i_inciden_650de4_idx'),
        ),
        migrations.AddIndex(
            model_name='emergencyincident',
            index=models.Index(fields=['status'], name='emergency_i_status_e420d0_idx'),
        ),
        migrations.AddIndex(
            model_name='emergencyincident',
            index=models.Index(fields=['user'], name='emergency_i_user_id_c8cb18_idx'),
        ),
        migrations.AddIndex(
            model_name='emergencyincident',
            index=models.Index(fields=['ride_id'], name='emergency_i_ride_id_de04b9_idx'),
        ),
        migrations.AddIndex(
            model_name='emergencyincident',
            index=models.Index(fields=['created_at'], name='emergency_i_created_84e820_idx'),
        ),
        migrations.AddIndex(
            model_name='emergencyincident',
            index=models.Index(fields=['assigned_operator'], name='emergency_i_assigne_d50fa2_idx'),
        ),
        migrations.AddIndex(
            model_name='incidentresponse',
            index=models.Index(fields=['incident'], name='incident_re_inciden_a1144d_idx'),
        ),
        migrations.AddIndex(
            model_name='incidentresponse',
            index=models.Index(fields=['action_type'], name='incident_re_action__c33b00_idx'),
        ),
        migrations.AddIndex(
            model_name='incidentresponse',
            index=models.Index(fields=['operator'], name='incident_re_operato_0b8b9c_idx'),
        ),
        migrations.AddIndex(
            model_name='incidentresponse',
            index=models.Index(fields=['created_at'], name='incident_re_created_9635f2_idx'),
        ),
        migrations.AddIndex(
            model_name='vipmonitoringsession',
            index=models.Index(fields=['user'], name='vip_monitor_user_id_582788_idx'),
        ),
        migrations.AddIndex(
            model_name='vipmonitoringsession',
            index=models.Index(fields=['ride_id'], name='vip_monitor_ride_id_bf2ce5_idx'),
        ),
        migrations.AddIndex(
            model_name='vipmonitoringsession',
            index=models.Index(fields=['is_active'], name='vip_monitor_is_acti_e8229d_idx'),
        ),
        migrations.AddIndex(
            model_name='vipmonitoringsession',
            index=models.Index(fields=['assigned_operator'], name='vip_monitor_assigne_f39586_idx'),
        ),
        migrations.AddIndex(
            model_name='vipmonitoringsession',
            index=models.Index(fields=['session_start'], name='vip_monitor_session_87467f_idx'),
        ),
    ]
