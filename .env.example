# VIP Ride-Hailing Platform - Environment Configuration

# Notes
# - Booleans must be lowercase: true/false (code checks for the string 'true')
#   If you prefer case-insensitive parsing, update settings parsing accordingly.
# - For local dev, you can set DJANGO_SETTINGS_MODULE to dev settings to avoid CLI flags
# - To load this file in Git Bash:
#     set -a; . ./.env; set +a
#   In PowerShell:
#     $env:DJANGO_SETTINGS_MODULE = "vip_ride_platform.dev_settings"  # and others as needed

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Application Settings
DEBUG=true
# Use dev settings by default for local runs; switch to prod_settings in production
DJANGO_SETTINGS_MODULE=vip_ride_platform.dev_settings
SECRET_KEY=your-secret-key-here-make-it-long-and-secure-for-production

# Database Configuration
# For development, use SQLite (default)
USE_POSTGRES=false

# Optional unified DSN (used by some deployment targets like Docker Compose prod)
# DATABASE_URL=postgresql://vip_user:your-password@localhost:5432/vip_ride_platform

# For production, uncomment and configure PostgreSQL (base settings read these)
# USE_POSTGRES=true
# DB_NAME=vip_ride_platform
# DB_USER=postgres
# DB_PASSWORD=your-password
# DB_HOST=localhost
# DB_PORT=5432

# Security Settings (Development)
# Set to True for production deployment
SECURE_SSL_REDIRECT=false
SESSION_COOKIE_SECURE=false
CSRF_COOKIE_SECURE=false
# HSTS seconds (only enable in production). dev_settings forces 0.
SECURE_HSTS_SECONDS=0
STRICT_PRODUCTION_MODE=False

# Redis + Celery (used for cache, channels, tasks)
REDIS_URL=redis://localhost:6379/0
# You can override Celery broker/result separately if desired
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# =============================================================================
# PAYMENT GATEWAY CONFIGURATION
# =============================================================================

# Default Gateway
DEFAULT_PAYMENT_GATEWAY=paystack

# Paystack Configuration
PAYSTACK_PUBLIC_KEY=pk_test_your_paystack_public_key
PAYSTACK_SECRET_KEY=sk_test_your_paystack_secret_key
PAYSTACK_WEBHOOK_SECRET=your_paystack_webhook_secret
PAYSTACK_TEST_MODE=true

# Flutterwave Configuration
FLUTTERWAVE_PUBLIC_KEY=FLWPUBK_TEST-your-public-key
FLUTTERWAVE_SECRET_KEY=FLWSECK_TEST-your-secret-key
FLUTTERWAVE_ENCRYPTION_KEY=FLWSECK_TEST-your-encryption-key
FLUTTERWAVE_WEBHOOK_SECRET=your_flutterwave_webhook_secret
FLUTTERWAVE_TEST_MODE=true

# Stripe Configuration
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
STRIPE_WEBHOOK_SECRET=whsec_your_stripe_webhook_secret
STRIPE_TEST_MODE=true

# Payment Settings
AUTO_PAYOUT_THRESHOLD=100.00
MIN_PAYOUT_AMOUNT=10.00
PAYOUT_SCHEDULE=weekly
PAYMENT_MAX_RETRY_ATTEMPTS=3
PAYMENT_RETRY_DELAY_MINUTES=5

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Maps & Location Services
GOOGLE_MAPS_API_KEY=your_google_maps_api_key

# Exchange Rate APIs
FIXER_API_KEY=your_fixer_api_key
EXCHANGERATE_API_KEY=your_exchangerate_api_key
EXCHANGE_RATE_UPDATE_INTERVAL=6

# =============================================================================
# SECURITY & ENCRYPTION
# =============================================================================

# Encryption Keys
ENCRYPTION_KEY=your-32-byte-encryption-key-here
PAYMENT_ENCRYPTION_KEY=your-payment-encryption-key-here

# Security Features
ENCRYPT_PAYMENT_DATA=true
PCI_COMPLIANCE_MODE=true
AUDIT_ALL_TRANSACTIONS=true
PAYMENT_TOKEN_EXPIRY_MINUTES=30
WEBHOOK_TIMEOUT_SECONDS=30

# GPS Encryption (optional tuning)
GPS_SESSION_TIMEOUT=7200
GPS_MAX_CONCURRENT_SESSIONS=1000
GPS_KEY_ROTATION_INTERVAL=24
# Retention by tier (defaults exist in code; override if needed)
# GPS_DATA_RETENTION_DAYS_NORMAL=30
# GPS_DATA_RETENTION_DAYS_PREMIUM=90
# GPS_DATA_RETENTION_DAYS_VIP=365
# GPS_DATA_RETENTION_DAYS_CONCIERGE=1095

# =============================================================================
# NOTIFICATION SETTINGS
# =============================================================================

# Payment Notifications
SEND_PAYMENT_CONFIRMATIONS=True
SEND_PAYOUT_NOTIFICATIONS=True
SEND_DISPUTE_ALERTS=True
PAYMENT_ADMIN_EMAILS=admin@example.com,finance@example.com

# =============================================================================
# COMPLIANCE & DATA RETENTION
# =============================================================================

# NDPR Compliance (Nigeria Data Protection Regulation)
PAYMENT_DATA_RETENTION_DAYS=2555  # 7 years
ANONYMIZE_OLD_PAYMENT_DATA=True
AUDIT_LOG_RETENTION_DAYS=2555

# =============================================================================
# DEVELOPMENT HELPERS
# =============================================================================

# Development-specific settings
# These should be False in production

# Enable multi-currency support
ENABLE_MULTI_CURRENCY_PAYMENTS=true

# Dashboard and metrics
PAYMENT_DASHBOARD_CACHE_TIMEOUT=300
ENABLE_REAL_TIME_PAYMENT_METRICS=False

# =============================================================================
# PRODUCTION DEPLOYMENT CHECKLIST
# =============================================================================
# Before deploying to production, ensure:
# 
# 1. Change DEBUG=false
# 2. Set DJANGO_SETTINGS_MODULE=vip_ride_platform.prod_settings
# 3. Set a strong SECRET_KEY (50+ characters)
# 4. Enable SSL settings:
#    - SECURE_SSL_REDIRECT=true
#    - SESSION_COOKIE_SECURE=true
#    - CSRF_COOKIE_SECURE=true
#    - SECURE_HSTS_SECONDS=31536000
# 5. Set STRICT_PRODUCTION_MODE=true
# 6. Configure production database (USE_POSTGRES=true and DB_* or DATABASE_URL)
# 7. Set up Redis for caching/channels/Celery (REDIS_URL, optionally CELERY_* overrides)
# 8. Configure real payment gateway keys (remove _TEST)
# 9. Set ALLOWED_HOSTS in settings or infra (Nginx) as needed
# 10. Configure email backend for production
# 11. Ensure logs/ directory exists for file logging (if enabled)
# =============================================================================
