# Generated by Django 5.2.5 on 2025-08-11 23:50

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0003_alter_user_managers_alter_user_username'),
        ('rides', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='ride',
            name='assigned_control_center_agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_monitoring_rides', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CancellationRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cancellation_type', models.CharField(choices=[('rider_free', 'Rider Cancellation (Free)'), ('rider_paid', 'Rider Cancellation (Fee Applied)'), ('driver', 'Driver Cancellation'), ('system', 'System Cancellation'), ('emergency', 'Emergency Cancellation')], max_length=15)),
                ('reason', models.TextField()),
                ('cancellation_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('refund_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('user_tier', models.CharField(max_length=10)),
                ('free_cancellation_window_minutes', models.IntegerField()),
                ('time_since_request_minutes', models.IntegerField()),
                ('driver_compensation', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('cancelled_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('ride', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cancellation_record', to='rides.ride')),
            ],
            options={
                'db_table': 'cancellation_records',
                'indexes': [models.Index(fields=['ride'], name='cancellatio_ride_id_2461ea_idx'), models.Index(fields=['cancellation_type'], name='cancellatio_cancell_131360_idx'), models.Index(fields=['cancelled_by'], name='cancellatio_cancell_a7f150_idx'), models.Index(fields=['cancelled_at'], name='cancellatio_cancell_5841c5_idx')],
            },
        ),
        migrations.CreateModel(
            name='DriverTimeoutRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timeout_duration_seconds', models.IntegerField()),
                ('expected_response_time_seconds', models.IntegerField()),
                ('user_tier', models.CharField(max_length=10)),
                ('ride_type', models.CharField(max_length=15)),
                ('distance_to_pickup_km', models.DecimalField(decimal_places=2, max_digits=6)),
                ('driver_was_online', models.BooleanField()),
                ('driver_was_available', models.BooleanField()),
                ('driver_active_rides', models.IntegerField(default=0)),
                ('occurred_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeout_records', to='accounts.driver')),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_timeouts', to='rides.ride')),
            ],
            options={
                'db_table': 'driver_timeout_records',
                'indexes': [models.Index(fields=['ride'], name='driver_time_ride_id_7c52fc_idx'), models.Index(fields=['driver'], name='driver_time_driver__29601b_idx'), models.Index(fields=['occurred_at'], name='driver_time_occurre_4f0a0a_idx'), models.Index(fields=['user_tier'], name='driver_time_user_ti_bd406c_idx')],
            },
        ),
        migrations.CreateModel(
            name='PaymentWorkflow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('current_step', models.CharField(choices=[('initiated', 'Payment Initiated'), ('authorization', 'Authorization in Progress'), ('authorized', 'Payment Authorized'), ('capture', 'Capture in Progress'), ('captured', 'Payment Captured'), ('settlement', 'Settlement in Progress'), ('completed', 'Payment Completed'), ('failed', 'Payment Failed'), ('refunded', 'Payment Refunded'), ('disputed', 'Payment Disputed')], default='initiated', max_length=15)),
                ('payment_method', models.CharField(max_length=50)),
                ('payment_gateway', models.CharField(max_length=50)),
                ('transaction_reference', models.CharField(max_length=100, unique=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('platform_commission', models.DecimalField(decimal_places=2, max_digits=10)),
                ('driver_earnings', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gateway_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('step_history', models.JSONField(default=list)),
                ('retry_attempts', models.IntegerField(default=0)),
                ('initiated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_error', models.TextField(blank=True)),
                ('requires_manual_review', models.BooleanField(default=False)),
                ('ride', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment_workflow', to='rides.ride')),
            ],
            options={
                'db_table': 'payment_workflows',
                'indexes': [models.Index(fields=['ride'], name='payment_wor_ride_id_35bcae_idx'), models.Index(fields=['current_step'], name='payment_wor_current_d53a58_idx'), models.Index(fields=['transaction_reference'], name='payment_wor_transac_32f45e_idx'), models.Index(fields=['payment_gateway'], name='payment_wor_payment_cb533b_idx'), models.Index(fields=['initiated_at'], name='payment_wor_initiat_cb95aa_idx')],
            },
        ),
        migrations.CreateModel(
            name='RideCompletionWorkflow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('current_step', models.CharField(choices=[('driver_completed', 'Driver Marked Complete'), ('rider_confirmation', 'Awaiting Rider Confirmation'), ('confirmed', 'Completion Confirmed'), ('disputed', 'Completion Disputed'), ('auto_confirmed', 'Auto-Confirmed')], default='driver_completed', max_length=20)),
                ('driver_completion_time', models.DateTimeField()),
                ('rider_confirmation_deadline', models.DateTimeField()),
                ('rider_confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('auto_confirmation_at', models.DateTimeField(blank=True, null=True)),
                ('final_pickup_location', models.JSONField(default=dict)),
                ('final_dropoff_location', models.JSONField(default=dict)),
                ('actual_route_data', models.JSONField(default=dict)),
                ('has_route_discrepancy', models.BooleanField(default=False)),
                ('has_fare_discrepancy', models.BooleanField(default=False)),
                ('discrepancy_notes', models.TextField(blank=True)),
                ('feedback_requested_at', models.DateTimeField(blank=True, null=True)),
                ('feedback_received_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ride', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='completion_workflow', to='rides.ride')),
            ],
            options={
                'db_table': 'ride_completion_workflows',
                'indexes': [models.Index(fields=['ride'], name='ride_comple_ride_id_e310ca_idx'), models.Index(fields=['current_step'], name='ride_comple_current_3d7164_idx'), models.Index(fields=['rider_confirmation_deadline'], name='ride_comple_rider_c_68c4f5_idx'), models.Index(fields=['auto_confirmation_at'], name='ride_comple_auto_co_84b43e_idx')],
            },
        ),
        migrations.CreateModel(
            name='RideStatusHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('from_status', models.CharField(max_length=25)),
                ('to_status', models.CharField(max_length=25)),
                ('reason', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_changes_made', to=settings.AUTH_USER_MODEL)),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='rides.ride')),
            ],
            options={
                'db_table': 'ride_status_history',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['ride'], name='ride_status_ride_id_523b96_idx'), models.Index(fields=['timestamp'], name='ride_status_timesta_43eaaa_idx'), models.Index(fields=['from_status', 'to_status'], name='ride_status_from_st_bea955_idx'), models.Index(fields=['changed_by'], name='ride_status_changed_8b80b2_idx')],
            },
        ),
        migrations.CreateModel(
            name='WorkflowAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('status_transition', 'Status Transition'), ('driver_search', 'Driver Search'), ('payment_process', 'Payment Processing'), ('notification_send', 'Notification Sent'), ('cancellation_fee', 'Cancellation Fee'), ('gps_tracking_start', 'GPS Tracking Started'), ('sos_trigger', 'SOS Triggered')], max_length=20)),
                ('action_status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('skipped', 'Skipped')], default='pending', max_length=15)),
                ('triggered_by_status', models.CharField(max_length=25)),
                ('action_data', models.JSONField(default=dict)),
                ('result_data', models.JSONField(default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('scheduled_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
                ('next_retry_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow_actions', to='rides.ride')),
            ],
            options={
                'db_table': 'workflow_actions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['ride'], name='workflow_ac_ride_id_e85bd2_idx'), models.Index(fields=['action_type'], name='workflow_ac_action__e957f5_idx'), models.Index(fields=['action_status'], name='workflow_ac_action__ff84ff_idx'), models.Index(fields=['scheduled_at'], name='workflow_ac_schedul_b94df0_idx'), models.Index(fields=['next_retry_at'], name='workflow_ac_next_re_fc2447_idx')],
            },
        ),
    ]
