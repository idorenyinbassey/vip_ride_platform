# Generated by Django 5.2.5 on 2025-08-06 13:57

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('fleet_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ride_type', models.CharField(choices=[('normal', 'Normal Ride'), ('premium', 'Premium Ride'), ('vip', 'VIP Ride'), ('airport', 'Airport Transfer'), ('corporate', 'Corporate Booking'), ('hotel_transfer', 'Hotel Transfer')], default='normal', max_length=15)),
                ('customer_tier', models.CharField(choices=[('normal', 'Normal'), ('premium', 'Premium'), ('vip', 'VIP')], default='normal', max_length=10)),
                ('status', models.CharField(choices=[('requested', 'Ride Requested'), ('accepted', 'Driver Accepted'), ('driver_arriving', 'Driver Arriving'), ('in_progress', 'Ride In Progress'), ('completed', 'Completed'), ('cancelled_by_customer', 'Cancelled by Customer'), ('cancelled_by_driver', 'Cancelled by Driver'), ('no_driver_found', 'No Driver Found')], default='requested', max_length=25)),
                ('billing_model', models.CharField(choices=[('standard', 'Standard Fare'), ('flexible_engine', 'Flexible by Engine Type'), ('fleet_fixed', 'Fleet Fixed Rate'), ('premium_multiplier', 'Premium Multiplier')], default='standard', max_length=20)),
                ('pickup_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('pickup_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('pickup_address', models.TextField()),
                ('destination_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('destination_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('destination_address', models.TextField()),
                ('encrypted_pickup_coordinates', models.TextField(blank=True)),
                ('encrypted_destination_coordinates', models.TextField(blank=True)),
                ('encrypted_route_data', models.TextField(blank=True)),
                ('encrypted_realtime_tracking', models.TextField(blank=True)),
                ('encryption_key_reference', models.CharField(blank=True, max_length=100)),
                ('pickup_landmark', models.CharField(blank=True, max_length=200)),
                ('destination_landmark', models.CharField(blank=True, max_length=200)),
                ('waypoints', models.TextField(blank=True, help_text='JSON array of intermediate waypoints')),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('scheduled_pickup_time', models.DateTimeField(blank=True, null=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('driver_arrival_time', models.DateTimeField(blank=True, null=True)),
                ('pickup_time', models.DateTimeField(blank=True, null=True)),
                ('dropoff_time', models.DateTimeField(blank=True, null=True)),
                ('estimated_distance_km', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('estimated_duration_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('estimated_fare', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('actual_distance_km', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('actual_duration_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('base_fare', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('distance_fare', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('time_fare', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('engine_type_multiplier', models.DecimalField(decimal_places=2, default=1.0, help_text='Multiplier based on vehicle engine type', max_digits=4)),
                ('fuel_consumption_charge', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('premium_service_charge', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('surge_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=3)),
                ('total_fare', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('platform_commission_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('platform_commission', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('driver_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('fleet_commission', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('vehicle_owner_share', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('requires_baby_seat', models.BooleanField(default=False)),
                ('requires_wheelchair_access', models.BooleanField(default=False)),
                ('requires_premium_vehicle', models.BooleanField(default=False)),
                ('special_instructions', models.TextField(blank=True)),
                ('customer_notes', models.TextField(blank=True)),
                ('vip_priority_level', models.PositiveIntegerField(default=0, help_text='0=Normal, 1-5=VIP priority levels')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('cancellation_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('cancellation_refund', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_sos_triggered', models.BooleanField(default=False)),
                ('sos_triggered_at', models.DateTimeField(blank=True, null=True)),
                ('sos_resolved', models.BooleanField(default=False)),
                ('sos_resolution_time', models.DateTimeField(blank=True, null=True)),
                ('emergency_contacts_notified', models.BooleanField(default=False)),
                ('weather_conditions', models.CharField(blank=True, max_length=50)),
                ('traffic_conditions', models.CharField(blank=True, max_length=50)),
                ('route_optimization_used', models.BooleanField(default=False)),
                ('customer_satisfaction_score', models.PositiveIntegerField(blank=True, help_text='1-10 satisfaction score', null=True)),
                ('ride_quality_score', models.PositiveIntegerField(blank=True, help_text='1-10 overall quality score', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_control_center_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='monitored_rides', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_rides', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='driver_rides', to=settings.AUTH_USER_MODEL)),
                ('fleet_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fleet_rides', to='fleet_management.fleetcompany')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_rides', to='fleet_management.vehicle')),
            ],
            options={
                'db_table': 'rides',
            },
        ),
        migrations.CreateModel(
            name='RideOffer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('estimated_arrival_time', models.PositiveIntegerField(help_text='Estimated minutes to reach pickup location')),
                ('offered_fare', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected'), ('EXPIRED', 'Expired')], default='PENDING', max_length=10)),
                ('driver_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('driver_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ride_offers', to=settings.AUTH_USER_MODEL)),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='rides.ride')),
            ],
            options={
                'db_table': 'ride_offers',
            },
        ),
        migrations.CreateModel(
            name='RideRating',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating_type', models.CharField(choices=[('CUSTOMER_TO_DRIVER', 'Customer Rating Driver'), ('DRIVER_TO_CUSTOMER', 'Driver Rating Customer')], max_length=20)),
                ('rating', models.PositiveIntegerField()),
                ('review', models.TextField(blank=True)),
                ('punctuality', models.PositiveIntegerField(blank=True, null=True)),
                ('cleanliness', models.PositiveIntegerField(blank=True, null=True)),
                ('safety', models.PositiveIntegerField(blank=True, null=True)),
                ('communication', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_ratings', to=settings.AUTH_USER_MODEL)),
                ('rater', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_ratings', to=settings.AUTH_USER_MODEL)),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='rides.ride')),
            ],
            options={
                'db_table': 'ride_ratings',
            },
        ),
        migrations.CreateModel(
            name='RideTracking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('encrypted_location_data', models.TextField(blank=True)),
                ('speed_kmh', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('heading', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('accuracy_meters', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('ride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracking_points', to='rides.ride')),
            ],
            options={
                'db_table': 'ride_tracking',
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('relationship', models.CharField(max_length=50)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_contacts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'emergency_contacts',
                'indexes': [models.Index(fields=['user'], name='emergency_c_user_id_fc62e1_idx'), models.Index(fields=['is_primary'], name='emergency_c_is_prim_88c1ca_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['customer'], name='rides_custome_1425ef_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['driver'], name='rides_driver__8fdcf2_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['vehicle'], name='rides_vehicle_b66180_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['fleet_company'], name='rides_fleet_c_aca282_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['status'], name='rides_status_376a74_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['requested_at'], name='rides_request_bff1c1_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['ride_type'], name='rides_ride_ty_13804f_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['customer_tier'], name='rides_custome_40bc97_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['billing_model'], name='rides_billing_0d4ad5_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['vip_priority_level'], name='rides_vip_pri_952cf4_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['is_sos_triggered'], name='rides_is_sos__c38dfc_idx'),
        ),
        migrations.AddIndex(
            model_name='ride',
            index=models.Index(fields=['scheduled_pickup_time'], name='rides_schedul_31abd7_idx'),
        ),
        migrations.AddIndex(
            model_name='rideoffer',
            index=models.Index(fields=['ride'], name='ride_offers_ride_id_74b51c_idx'),
        ),
        migrations.AddIndex(
            model_name='rideoffer',
            index=models.Index(fields=['driver'], name='ride_offers_driver__1da1bf_idx'),
        ),
        migrations.AddIndex(
            model_name='rideoffer',
            index=models.Index(fields=['status'], name='ride_offers_status_d6827a_idx'),
        ),
        migrations.AddIndex(
            model_name='rideoffer',
            index=models.Index(fields=['expires_at'], name='ride_offers_expires_5356bf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rideoffer',
            unique_together={('ride', 'driver')},
        ),
        migrations.AddIndex(
            model_name='riderating',
            index=models.Index(fields=['ride'], name='ride_rating_ride_id_5154b2_idx'),
        ),
        migrations.AddIndex(
            model_name='riderating',
            index=models.Index(fields=['rated_user'], name='ride_rating_rated_u_efb3a7_idx'),
        ),
        migrations.AddIndex(
            model_name='riderating',
            index=models.Index(fields=['rating'], name='ride_rating_rating_ab4161_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='riderating',
            unique_together={('ride', 'rater', 'rating_type')},
        ),
        migrations.AddIndex(
            model_name='ridetracking',
            index=models.Index(fields=['ride'], name='ride_tracki_ride_id_7c1700_idx'),
        ),
        migrations.AddIndex(
            model_name='ridetracking',
            index=models.Index(fields=['recorded_at'], name='ride_tracki_recorde_04b709_idx'),
        ),
    ]
