# Generated by Django 5.2.6 on 2025-09-11 18:53

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0005_alter_premiumdigitalcard_tier_alter_user_tier'),
    ]

    operations = [
        migrations.CreateModel(
            name='CardBatchGeneration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tier', models.CharField(choices=[('vip', 'VIP'), ('vip_premium', 'VIP Premium')], max_length=15)),
                ('quantity', models.PositiveIntegerField()),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('purpose', models.TextField(help_text='Reason for generating this batch')),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'card_batch_generation',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='VIPDigitalCard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('serial_number', models.CharField(help_text='Formatted serial number displayed to user', max_length=19, unique=True, validators=[django.core.validators.RegexValidator(message='Serial number must be in format VIP-XXXX-XXXX-XXXX or VIPR-XXXX-XXXX-XXXX', regex='^(VIP|VIPR)-\\d{4}-\\d{4}-\\d{4}$')])),
                ('activation_code', models.CharField(help_text='Alphanumeric activation code for card activation', max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Activation code must be 8-12 alphanumeric characters', regex='^[A-Z0-9]{8,12}$')])),
                ('tier', models.CharField(choices=[('vip', 'VIP'), ('vip_premium', 'VIP Premium')], max_length=15)),
                ('status', models.CharField(choices=[('inactive', 'Inactive'), ('active', 'Active'), ('suspended', 'Suspended'), ('expired', 'Expired'), ('revoked', 'Revoked')], default='inactive', max_length=20)),
                ('card_features', models.JSONField(default=dict, help_text='JSON object containing card-specific features')),
                ('primary_color', models.CharField(default='#FFD700', max_length=7)),
                ('secondary_color', models.CharField(default='#FF8C00', max_length=7)),
                ('background_image', models.URLField(blank=True, null=True)),
                ('hologram_pattern', models.CharField(default='diamond', max_length=50)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('issued_date', models.DateTimeField(auto_now_add=True)),
                ('activated_date', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('activation_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('encrypted_metadata', models.TextField(blank=True, help_text='Encrypted sensitive card data')),
                ('activated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activated_vip_cards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'vip_digital_cards',
                'ordering': ['-issued_date'],
            },
        ),
        migrations.CreateModel(
            name='CardActivationHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('serial_number_attempted', models.CharField(max_length=19)),
                ('activation_code_attempted', models.CharField(max_length=12)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed_invalid_serial', 'Failed - Invalid Serial'), ('failed_invalid_code', 'Failed - Invalid Code'), ('failed_already_activated', 'Failed - Already Activated'), ('failed_expired', 'Failed - Expired'), ('failed_other', 'Failed - Other')], max_length=30)),
                ('error_message', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('attempt_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activation_history', to='accounts.vipdigitalcard')),
            ],
            options={
                'db_table': 'card_activation_history',
                'ordering': ['-attempt_time'],
            },
        ),
        migrations.AddIndex(
            model_name='vipdigitalcard',
            index=models.Index(fields=['serial_number'], name='vip_digital_serial__4e0d7d_idx'),
        ),
        migrations.AddIndex(
            model_name='vipdigitalcard',
            index=models.Index(fields=['activation_code'], name='vip_digital_activat_e57d1d_idx'),
        ),
        migrations.AddIndex(
            model_name='vipdigitalcard',
            index=models.Index(fields=['activated_by', 'status'], name='vip_digital_activat_acc7f3_idx'),
        ),
        migrations.AddIndex(
            model_name='vipdigitalcard',
            index=models.Index(fields=['tier', 'status'], name='vip_digital_tier_60337d_idx'),
        ),
    ]
