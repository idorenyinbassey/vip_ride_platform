# Generated by Django 5.2.5 on 2025-08-06 14:57

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('attempt_type', models.CharField(choices=[('success', 'Successful Login'), ('failed_password', 'Failed Password'), ('failed_mfa', 'Failed MFA'), ('blocked_suspicious', 'Blocked Suspicious'), ('blocked_rate_limit', 'Blocked Rate Limit')], max_length=20)),
                ('success', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('device_fingerprint', models.CharField(blank=True, max_length=64)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('is_suspicious', models.BooleanField(default=False)),
                ('risk_score', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('blocked_reason', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='login_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'login_attempts',
                'indexes': [models.Index(fields=['user', 'created_at'], name='login_attem_user_id_18b2e6_idx'), models.Index(fields=['email', 'created_at'], name='login_attem_email_61a0cd_idx'), models.Index(fields=['ip_address', 'created_at'], name='login_attem_ip_addr_f68fb5_idx'), models.Index(fields=['success', 'created_at'], name='login_attem_success_965250_idx'), models.Index(fields=['is_suspicious'], name='login_attem_is_susp_909df1_idx')],
            },
        ),
        migrations.CreateModel(
            name='MFAToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token_type', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('totp', 'TOTP App'), ('backup', 'Backup Code'), ('biometric', 'Biometric')], max_length=20)),
                ('secret_key', models.CharField(blank=True, max_length=255)),
                ('backup_codes', models.JSONField(blank=True, default=list)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('email_address', models.EmailField(blank=True, max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('failed_attempts', models.PositiveIntegerField(default=0)),
                ('locked_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mfa_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'mfa_tokens',
                'indexes': [models.Index(fields=['user', 'is_active'], name='mfa_tokens_user_id_a15fbf_idx'), models.Index(fields=['token_type'], name='mfa_tokens_token_t_15e920_idx'), models.Index(fields=['is_primary'], name='mfa_tokens_is_prim_2ba5de_idx')],
                'unique_together': {('user', 'token_type')},
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('suspicious_login', 'Suspicious Login'), ('multiple_failed_logins', 'Multiple Failed Logins'), ('unusual_location', 'Unusual Location'), ('rate_limit_exceeded', 'Rate Limit Exceeded'), ('mfa_bypass_attempt', 'MFA Bypass Attempt'), ('token_manipulation', 'Token Manipulation'), ('concurrent_session_abuse', 'Concurrent Session Abuse')], max_length=30)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('auto_response_taken', models.CharField(blank=True, max_length=100)),
                ('manual_review_required', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_events', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='security_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'security_events',
                'indexes': [models.Index(fields=['user', 'created_at'], name='security_ev_user_id_70c595_idx'), models.Index(fields=['event_type', 'severity'], name='security_ev_event_t_4d4c77_idx'), models.Index(fields=['is_resolved'], name='security_ev_is_reso_f0a99f_idx'), models.Index(fields=['created_at'], name='security_ev_created_510c16_idx')],
            },
        ),
        migrations.CreateModel(
            name='TrustedDevice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_fingerprint', models.CharField(db_index=True, max_length=64)),
                ('device_name', models.CharField(blank=True, max_length=100)),
                ('user_agent', models.TextField()),
                ('ip_address', models.GenericIPAddressField()),
                ('is_active', models.BooleanField(default=True)),
                ('trust_level', models.CharField(choices=[('basic', 'Basic Trust'), ('high', 'High Trust'), ('vip', 'VIP Trust')], default='basic', max_length=20)),
                ('first_used_at', models.DateTimeField(auto_now_add=True)),
                ('last_used_at', models.DateTimeField(auto_now=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trusted_devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trusted_devices',
                'indexes': [models.Index(fields=['user', 'is_active'], name='trusted_dev_user_id_02eb40_idx'), models.Index(fields=['device_fingerprint'], name='trusted_dev_device__9a8b0f_idx'), models.Index(fields=['last_used_at'], name='trusted_dev_last_us_2831f8_idx')],
                'unique_together': {('user', 'device_fingerprint')},
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('device_fingerprint', models.CharField(blank=True, max_length=64)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('country', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField()),
                ('is_trusted_device', models.BooleanField(default=False)),
                ('requires_mfa', models.BooleanField(default=False)),
                ('mfa_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_sessions',
                'indexes': [models.Index(fields=['user', 'is_active'], name='user_sessio_user_id_bb1b83_idx'), models.Index(fields=['session_id'], name='user_sessio_session_e62ba3_idx'), models.Index(fields=['expires_at'], name='user_sessio_expires_66ae96_idx'), models.Index(fields=['ip_address'], name='user_sessio_ip_addr_0626e4_idx')],
            },
        ),
    ]
