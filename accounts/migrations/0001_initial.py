# Generated by Django 5.2.5 on 2025-08-06 13:57

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('private', 'Private Driver'), ('fleet_employee', 'Fleet Employee'), ('owner_operator', 'Owner Operator')], default='private', max_length=20)),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('license_expiry_date', models.DateField()),
                ('license_class', models.CharField(default='C', max_length=10)),
                ('subscription_tier', models.CharField(choices=[('basic', 'Basic ($99/month)'), ('premium', 'Premium ($199/month)'), ('vip', 'VIP ($299/month)')], default='basic', max_length=10)),
                ('subscription_start_date', models.DateTimeField(blank=True, null=True)),
                ('subscription_end_date', models.DateTimeField(blank=True, null=True)),
                ('subscription_auto_renew', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('active', 'Active'), ('suspended', 'Suspended'), ('inactive', 'Inactive'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('license_front_image', models.ImageField(upload_to='driver_docs/licenses/')),
                ('license_back_image', models.ImageField(upload_to='driver_docs/licenses/')),
                ('identity_document', models.ImageField(upload_to='driver_docs/identity/')),
                ('proof_of_address', models.ImageField(upload_to='driver_docs/address/')),
                ('background_check_document', models.FileField(blank=True, null=True, upload_to='driver_docs/background/')),
                ('background_check_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('background_check_date', models.DateTimeField(blank=True, null=True)),
                ('background_check_expiry', models.DateTimeField(blank=True, null=True)),
                ('bank_account_name', models.CharField(blank=True, max_length=100)),
                ('bank_account_number', models.CharField(blank=True, max_length=20)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('bank_code', models.CharField(blank=True, max_length=10)),
                ('tax_identification_number', models.CharField(blank=True, max_length=50)),
                ('fleet_employee_id', models.CharField(blank=True, max_length=50)),
                ('total_rides', models.PositiveIntegerField(default=0)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('completion_rate', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('cancellation_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('is_online', models.BooleanField(default=False)),
                ('is_available', models.BooleanField(default=False)),
                ('current_location_lat', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('current_location_lng', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('last_location_update', models.DateTimeField(blank=True, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20)),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'drivers',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('user_type', models.CharField(choices=[('CUSTOMER', 'Customer'), ('DRIVER', 'Driver'), ('FLEET_OWNER', 'Fleet Owner'), ('VEHICLE_OWNER', 'Vehicle Owner'), ('ADMIN', 'Admin')], default='CUSTOMER', max_length=20)),
                ('tier', models.CharField(choices=[('normal', 'Normal'), ('premium', 'Premium'), ('vip', 'VIP')], default='normal', max_length=10)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(default='Nigeria', max_length=100)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_identity_verified', models.BooleanField(default=False)),
                ('is_suspended', models.BooleanField(default=False)),
                ('suspension_reason', models.TextField(blank=True)),
                ('data_processing_consent', models.BooleanField(default=False)),
                ('data_processing_consent_date', models.DateTimeField(blank=True, null=True)),
                ('marketing_consent', models.BooleanField(default=False)),
                ('marketing_consent_date', models.DateTimeField(blank=True, null=True)),
                ('location_tracking_consent', models.BooleanField(default=False)),
                ('location_tracking_consent_date', models.DateTimeField(blank=True, null=True)),
                ('data_retention_period_years', models.PositiveIntegerField(default=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_location_lat', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('last_location_lng', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
