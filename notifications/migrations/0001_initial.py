# Generated by Django 5.2.5 on 2025-08-11 01:12

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('ride_request', 'Ride Request'), ('ride_accepted', 'Ride Accepted'), ('ride_started', 'Ride Started'), ('ride_completed', 'Ride Completed'), ('ride_cancelled', 'Ride Cancelled'), ('driver_arrived', 'Driver Arrived'), ('payment_processed', 'Payment Processed'), ('payment_failed', 'Payment Failed'), ('emergency_alert', 'Emergency Alert'), ('sos_triggered', 'SOS Triggered'), ('promo_offer', 'Promotional Offer'), ('system_update', 'System Update'), ('hotel_booking', 'Hotel Booking'), ('maintenance_alert', 'Maintenance Alert')], max_length=25, unique=True)),
                ('title_template', models.CharField(help_text='Title template with placeholders', max_length=200)),
                ('message_template', models.TextField(help_text='Message template with placeholders')),
                ('sms_template', models.TextField(blank=True, help_text='SMS-specific template (shorter)')),
                ('email_subject_template', models.CharField(blank=True, help_text='Email subject template', max_length=200)),
                ('email_body_template', models.TextField(blank=True, help_text='Email body template (HTML supported)')),
                ('is_active', models.BooleanField(default=True)),
                ('supports_html', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'notification_templates',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('ride_request', 'Ride Request'), ('ride_accepted', 'Ride Accepted'), ('ride_started', 'Ride Started'), ('ride_completed', 'Ride Completed'), ('ride_cancelled', 'Ride Cancelled'), ('driver_arrived', 'Driver Arrived'), ('payment_processed', 'Payment Processed'), ('payment_failed', 'Payment Failed'), ('emergency_alert', 'Emergency Alert'), ('sos_triggered', 'SOS Triggered'), ('promo_offer', 'Promotional Offer'), ('system_update', 'System Update'), ('hotel_booking', 'Hotel Booking'), ('maintenance_alert', 'Maintenance Alert')], max_length=25)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('channel', models.CharField(choices=[('push', 'Push Notification'), ('sms', 'SMS'), ('email', 'Email'), ('in_app', 'In-App Notification'), ('whatsapp', 'WhatsApp')], default='push', max_length=15)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent'), ('critical', 'Critical')], default='normal', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed'), ('expired', 'Expired')], default='pending', max_length=15)),
                ('object_id', models.CharField(blank=True, max_length=100, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('next_retry_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('external_id', models.CharField(blank=True, help_text='External service notification ID', max_length=100)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationDeliveryLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('attempt_number', models.PositiveIntegerField()),
                ('delivery_channel', models.CharField(choices=[('push', 'Push Notification'), ('sms', 'SMS'), ('email', 'Email'), ('in_app', 'In-App Notification'), ('whatsapp', 'WhatsApp')], max_length=15)),
                ('provider_name', models.CharField(help_text='SMS/Email/Push provider name', max_length=50)),
                ('provider_message_id', models.CharField(blank=True, help_text='Provider-specific message ID', max_length=100)),
                ('delivery_status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed'), ('expired', 'Expired')], max_length=15)),
                ('error_message', models.TextField(blank=True)),
                ('provider_response', models.JSONField(blank=True, default=dict)),
                ('sent_at', models.DateTimeField()),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('cost_amount', models.DecimalField(blank=True, decimal_places=4, help_text='Cost per message', max_digits=10, null=True)),
                ('cost_currency', models.CharField(default='USD', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_logs', to='notifications.notification')),
            ],
            options={
                'db_table': 'notification_delivery_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('push_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=True)),
                ('email_enabled', models.BooleanField(default=True)),
                ('whatsapp_enabled', models.BooleanField(default=False)),
                ('ride_notifications', models.BooleanField(default=True)),
                ('payment_notifications', models.BooleanField(default=True)),
                ('promotional_notifications', models.BooleanField(default=True)),
                ('emergency_notifications', models.BooleanField(default=True)),
                ('system_notifications', models.BooleanField(default=True)),
                ('quiet_hours_enabled', models.BooleanField(default=False)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('minimum_priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent'), ('critical', 'Critical')], default='low', max_length=10)),
                ('preferred_phone', models.CharField(blank=True, help_text='Preferred phone for SMS/WhatsApp', max_length=20)),
                ('preferred_email', models.EmailField(blank=True, help_text='Preferred email for notifications', max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notification_preferences',
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'status'], name='notificatio_recipie_218e2a_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type'], name='notificatio_notific_19df93_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['channel'], name='notificatio_channel_d2a579_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority'], name='notificatio_priorit_17ee5f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['status'], name='notificatio_status_fce6f5_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='notificatio_created_e4c995_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['sent_at'], name='notificatio_sent_at_eceac5_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationdeliverylog',
            index=models.Index(fields=['notification'], name='notificatio_notific_04c9fc_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationdeliverylog',
            index=models.Index(fields=['delivery_status'], name='notificatio_deliver_5b90b7_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationdeliverylog',
            index=models.Index(fields=['provider_name'], name='notificatio_provide_4aa8f9_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationdeliverylog',
            index=models.Index(fields=['sent_at'], name='notificatio_sent_at_b62087_idx'),
        ),
    ]
